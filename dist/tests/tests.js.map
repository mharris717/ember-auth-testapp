{
  "version": 3,
  "file": "tests.js",
  "sources": [
    "tmp/transpiled/tests/acceptance/auth_smoke_test.js",
    "tmp/transpiled/tests/acceptance/index_test.js",
    "tmp/transpiled/tests/acceptance/posts_test.js",
    "tmp/transpiled/tests/acceptance/registration_test.js",
    "tmp/transpiled/tests/unit/routes/index_test.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/tests/acceptance/auth_smoke_test\",\n  [],\n  function() {\n    \"use strict\";\n    module(\"Auth Smoke\", {\n      setup: function() {\n        var abc;\n        abc = 42;\n        console.debug(\"in setup\");\n        return App.reset();\n      },\n      teardown: function() {\n        return Ember.run(function() {\n          App.Auth.get(\"_session\").clear();\n          App.Auth.trigger(\"signOutSuccess\");\n          return Em.Auth.Request.MyDummy.clearOptsList();\n        });\n      }\n    });\n\n    test(\"global exists\", function() {\n      var res;\n      res = !!EmberAuth;\n      return equal(res, true);\n    });\n\n    test(\"App has Auth object\", function() {\n      var res;\n      res = !!App.Auth;\n      return equal(res, true);\n    });\n\n    test('login success - shows email shorter', function() {\n      return helpers.loginSuccessfully().then(function() {\n        var res;\n        res = $(\".user-status\").text().match(\"Signed In as user@fake.com\");\n        equal(res[0], \"Signed In as user@fake.com\");\n        return equal(Em.Auth.Request.MyDummy.getOptsList().length, 1);\n      });\n    });\n\n    test('login success - saves token', function() {\n      return helpers.loginSuccessfully().then(function() {\n        return equal(App.Auth.get('authToken'), 'token123');\n      });\n    });\n\n    test('login failure', function() {\n      return helpers.loginFail().then(function() {\n        var res;\n        res = $(\".user-status\").text().match(\"Signed In\");\n        equal(res, null);\n        return equal(Em.Auth.Request.MyDummy.getOptsList().length, 1);\n      });\n    });\n\n    if (false) {\n      test('find after login', function() {\n        return helpers.loginSuccessfully().then(function() {\n          var a, data;\n          a = App.Post.find();\n          equal(2, Em.Auth.Request.MyDummy.getOptsList().length);\n          data = Em.Auth.Request.MyDummy.getOptsList()[1];\n          equal(\"\" + (App.getServerUrl()) + \"/posts\", data.url);\n          return equal(\"token123\", data.data.auth_token);\n        });\n      });\n    }\n\n  });",
    "define(\"appkit/tests/acceptance/index_test\",\n  [\"appkit/routes/index\",\"appkit/app\"],\n  function(Index, App) {\n    \"use strict\";\n\n    module(\"Acceptances - Index\", {\n      setup: function(){\n        App.reset();\n      }\n    });\n\n    test(\"index renders\", function(){\n      expect(3);\n\n      visit('/').then(function(){\n        ok(exists(\"h2:contains('Welcome to Ember.js')\"));\n\n        var list = find(\"ul li\");\n        equal(list.length, 3);\n        equal(list.text(), \"redyellowblue\");\n      });\n    });\n\n  });",
    "define(\"appkit/tests/acceptance/posts_test\",\n  [],\n  function() {\n    \"use strict\";\n    module(\"Posts Test\", {\n      setup: function() {\n        return App.reset();\n      },\n      teardown: function() {\n        return Ember.run(function() {\n          App.Auth.get(\"_session\").clear();\n          App.Auth.trigger(\"signOutSuccess\");\n          return Em.Auth.Request.MyDummy.clearOptsList();\n        });\n      }\n    });\n\n    test('posts index', function() {\n      return visit(\"/posts\").then(function() {\n        return equal($(\".post\").length, 2);\n      });\n    });\n\n  });",
    "define(\"appkit/tests/acceptance/registration_test\",\n  [],\n  function() {\n    \"use strict\";\n    module(\"Registration\", {\n      setup: function() {\n        return App.reset();\n      },\n      teardown: function() {\n        return Ember.run(function() {\n          App.Auth.get(\"_session\").clear();\n          App.Auth.trigger(\"signOutSuccess\");\n          return Em.Auth.Request.MyDummy.clearOptsList();\n        });\n      }\n    });\n\n    test(\"smoke\", function() {\n      return equal(2, 2);\n    });\n\n    if (false) {\n      test(\"register smoke\", function() {\n        var email, password;\n        email = \"test@fake.com\";\n        password = \"p123\";\n        return helpers.register(email, password).then(function() {\n          var data;\n          equal(Em.Auth.Request.MyDummy.getOptsList().length, 1);\n          data = Em.Auth.Request.MyDummy.getOptsList()[0];\n          console.debug(\"opts\");\n          console.debug(data);\n          equal(data.url, \"\" + (App.getServerUrl()) + \"/users.json\");\n          equal(data.type, \"POST\");\n          equal(data.data.user.email, email);\n          equal(data.data.user.password, password);\n          equal($(\".registered\").text().trim(), \"Successfully Registered\");\n          return equal(App.get('currentPath'), 'registered');\n        });\n      });\n    }\n\n    test(\"register path\", function() {\n      var email, password;\n      email = \"test@fake.com\";\n      password = \"p123\";\n      return helpers.register(email, password).then(function() {\n        equal($(\".registered\").text().trim(), \"Successfully Registered\");\n        return equal(App.get('currentPath'), 'registered');\n      });\n    });\n\n    test(\"register data\", function() {\n      var email, password;\n      email = \"test@fake.com\";\n      password = \"p123\";\n      return helpers.register(email, password).then(function() {\n        var u;\n        u = App.RegisterController.justRegistered;\n        equal(u.get('email'), email);\n        return equal(u.get('password'), password);\n      });\n    });\n\n  });",
    "define(\"appkit/tests/unit/routes/index_test\",\n  [\"appkit/routes/index\",\"appkit/app\"],\n  function(Index, App) {\n    \"use strict\";\n\n    var route;\n\n    module(\"Unit - IndexRoute\", {\n      setup: function(){\n        route = App.__container__.lookup('route:index');\n      }\n    });\n\n    test(\"it exists\", function(){\n      ok(route);\n      ok(route instanceof Ember.Route);\n    });\n\n    test(\"#model\", function(){\n      deepEqual(route.model(), ['red', 'yellow', 'blue']);\n    });\n\n  });"
  ]
}